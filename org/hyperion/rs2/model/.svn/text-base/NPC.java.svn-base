package org.hyperion.rs2.model;

import org.hyperion.rs2.event.impl.DeathEvent;
import org.hyperion.rs2.model.Damage.Hit;
import org.hyperion.rs2.model.Damage.HitType;
import org.hyperion.rs2.model.UpdateFlags.UpdateFlag;
import org.hyperion.rs2.model.region.Region;

/**
 * <p>Represents a non-player character in the in-game world.</p>
 * @author Graham Edgecombe
 *
 */
public class NPC extends Entity {
	
	/**
	 * The definition.
	 */
	private final NPCDefinition definition;
	
	
	/**
	 * Creates the NPC with the specified definition.
	 * @param definition The definition.
	 */
	public NPC(NPCDefinition definition,int respawnTime) {
		super();
		this.definition = definition;
		if(respawnTime > 0)
			this.npcDeathTimer = respawnTime;
		else 
			this.npcDeathTimer = definition.spawnTime();
		if(definition.getId() == 2745){
			System.out.println("jadhp: "+definition.maxHp());
		}
		this.maxHealth = definition.maxHp();
		this.health = definition.maxHp();
	}
	
	/**
	 * Gets the NPC definition.
	 * @return The NPC definition.
	 */
	public NPCDefinition getDefinition() {
		return definition;
	}

	@Override
	public void addToRegion(Region region) {
		region.addNpc(this);
	}

	@Override
	public void removeFromRegion(Region region) {
		region.removeNpc(this);
	}

	@Override
	public int getClientIndex() {
		return this.getIndex();
	}

	public void inflictDamage(int damg, Entity source,boolean poison){
		HitType h1 = HitType.NORMAL_DAMAGE;
		if(damg > health)
			damg = health;
		if(poison)
			h1 = HitType.POISON_DAMAGE;
		else if(damg <= 0)
			h1 = HitType.NO_DAMAGE;
		Hit h2 = new Hit(damg,h1);
		inflictDamage(h2,source);
	}
	
	public void inflictDamage(Hit inc, Entity source) {
		if(!getUpdateFlags().get(UpdateFlag.HIT)) {
			getDamage().setHit1(inc);
			getUpdateFlags().flag(UpdateFlag.HIT);
		} else {
			if(!getUpdateFlags().get(UpdateFlag.HIT_2)) {
				getDamage().setHit2(inc);
				getUpdateFlags().flag(UpdateFlag.HIT_2);
			}
		}
		health -= inc.getDamage();
		if(health <= 0) {
			if(!this.isDead()) {
				World.getWorld().submit(new DeathEvent(this));
			}
			this.setDead(true);
		}
	}
	
	@Override
	public void inflictDamage(int damage, HitType type) {
		// TODO Auto-generated method stub
		
	}
	
	public int health = 10;
	public int maxHealth = 10;
	
	public int npcDeathTimer = -1;
}
